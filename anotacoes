# Kubernetes simple 1


minikube start --vm-driver=virtualbox			-> comando minikube usando virtualbox
kubectl get nodes								-> informando os nos do minikes
kubectl get pods								-> visualizar os pods
kubectl run nginx-pod --image=nginx:latest		-> criando imagem nginx
kubectl get pods --watch						-> usando a plag --watch acompanha em tempo real
kubectl describe pod nginx-pod					-> exibe disversas informcoes do pod
kubectl edit pod nginx-pod						-> editar pod 
kubectl apply -f primeiro-pod.yml				-> comando para aplicar kubernete declarativo
kubectl delete pod nginx-pod					-> deletar pode criado de forma imperativo 
kubectl delete -f primeiro-pod.yml				-> deletar pode criado de forma declarativa 
kubectl exec -it portal-noticias -- bash		-> acessar de forma interativa 

kubectl get pods -o wide						-> cerificar ip dos pods
kubectl get svc ou/ service						-> visulizar os servicos criados
	
kubectl get nodes -o wide						-> cerificar ip dos nos

kubectl delete pods --all						-> deletar todos os pods
kubectl delete svc --all						-> deletar todos os servicos
kubectl delete configmap --all					-> deletar todos os configmap

kubectl get configmap							-> visulizar todos os configmaps criados 


# Kubernetes simple  2


ReplicaSets: 

Que ReplicaSets são criados automaticamente dentro de um Deployment

Comandos: 
kubectl get rs 									-> visualizar os replicaset criado
kubectl get pods --watch						-> usando a plag --watch acompanha em tempo real


Deployments:

Um deployment e uma camada acima do replicaset.
Que Pods normalmente são criados através de Deployments, e não individualmente.


Comandos: 
kubectl get deployments 																									-> visualizar os deployments criado
kubectl get deployments --watch																								-> usando a plag --watch acompanha em tempo real
kubectl rollout history deployment nginx-deployment																			-> historico referente as versoes dos deployment informando
kubectl apply -f portal-noticias/nginx-deployment.yml --record																-> 
kubectl annotate deployment nginx-deployment kubernetes.io/change-cause="Definido a imagem com a versao latest"				-> 
kubectl rollout undo deployment nginx-deployment --to-revision=2															-> rolled back refrente a versao 2 
kubectl delete deployment nginx-deployment																					-> deletar deployment
kubectl delete -f portal-noticias/portal-noticias-replicaset.yml															-> deletar replicaset via arquivo

kubectl apply -f portal-noticias/portal-noticias-deployment.yml
kubectl annotate deployment portal-noticias-deployment kubernetes.io/change-cause="Criando portal de noticias na versao 1"
kubectl rollout history deployment portal-noticias-deployment

kubectl delete pod sistema-noticias
kubectl apply -f portal-noticias/sistema-noticias-deployment.yml
kubectl get pods
kubectl delete pod db-noticias
kubectl apply -f portal-noticias/db-noticias-deployment.yml
kubectl annotate deployment sistema-noticias-deployment kubernetes.io/change-cause="Criando portal de noticias na versao 1"
kubectl rollout history deployment sistema-noticias-deployment
kubectl annotate deployment db-noticias-deployment kubernetes.io/change-cause="Criando portal de noticias na versao 1"
kubectl rollout history deployment db-noticias-deployment


Persistir dados com Volumes:

Comandos: 


criar pasta no minikube:
	minikube ssh
	cd /home/
	sudo mkdir primeiro-volume
	logout
kubectl apply -f exemplo/pod-volume.yml
kubectl get pods

kubectl exec -it pod-volume --container nginx-container -- bash